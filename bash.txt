# ccsplit wrapper function
ccsplit() {
    case "$1" in
        list|cleanup)
            # These commands don't need special handling
            command ccsplit "$@"
            ;;
        switch)
            # For switch command, capture output and execute cd command
            local output=$(command ccsplit "$@")
            echo "$output"
            
            # Extract and execute the cd command if switch was successful
            local cd_cmd=$(echo "$output" | grep "^cd " | tail -1)
            if [ -n "$cd_cmd" ]; then
                eval "$cd_cmd"
            fi
            ;;
        *)
            # For session creation (default command)
            local output=$(command ccsplit "$@")
            echo "$output"

            # Extract and execute the cd command if session was created successfully
            local cd_cmd=$(echo "$output" | grep "^cd " | tail -1)
            if [ -n "$cd_cmd" ]; then
                eval "$cd_cmd"
            fi
            ;;
    esac
}

# Optional: Add bash completion for switch command
_ccsplit_completions() {
    local cur="${COMP_WORDS[COMP_CWORD]}"
    local prev="${COMP_WORDS[COMP_CWORD-1]}"
    
    # Only provide completions for switch and cleanup commands
    if [[ "$prev" == "switch" ]] || [[ "$prev" == "cleanup" ]]; then
        # Get list of sessions
        local sessions=$(command ccsplit list 2>/dev/null | grep -E "^[[:space:]]*[^[:space:]]+" | awk '{print $1}' | grep -v "Active" | grep -v "No active")
        COMPREPLY=($(compgen -W "$sessions" -- "$cur"))
    elif [[ "$COMP_CWORD" -eq 1 ]]; then
        # Complete command names
        COMPREPLY=($(compgen -W "list switch cleanup" -- "$cur"))
    fi
}

# Enable bash completion if available
if [[ -n "$BASH_VERSION" ]]; then
    complete -F _ccsplit_completions ccsplit
fi
